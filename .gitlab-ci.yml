image: stanlegendcity/docker-awscli-node-librdkafka

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  REPOSITORY_URL: 422475399798.dkr.ecr.eu-central-1.amazonaws.com/legend-main-page-client

services:
  - docker:dind

stages:
  - test
  - build
  - review
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
  - node_modules/
  - build/

test:
  stage: test
  tags:
    - office
    - linux
    - docker
  script:
    - npm install --no-save --prefer-offline
    - npm test

build:
  stage: build
  tags:
    - office
    - linux
    - docker
  script:
    - npm install --no-save --prefer-offline
    - npm run build

review:
  stage: review
  variables:
    REVIEW_PATH: '/var/www/html/$CI_PROJECT_NAME/$CI_BUILD_REF_SLUG'
  before_script:
    - npm install --no-save --prefer-offline
  script:
    - npm run build
    - echo $REVIEW_PATH
    - mkdir -p $REVIEW_PATH
    - rsync -av --delete build/ $REVIEW_PATH
  environment:
    name: review/$CI_BUILD_REF_NAME
    url: http://$CI_BUILD_REF_SLUG.$CI_PROJECT_NAME.demo.legeng/
    on_stop: stop_review
  only:
    - branches
  tags:
    - office
    - linux
    - review

stop_review:
  stage: review
  script:
    - rm -rf build /var/www/html/$CI_PROJECT_NAME/$CI_BUILD_REF_SLUG
  variables:
    GIT_STRATEGY: none
  when: manual
  environment:
    name: review/$CI_BUILD_REF_NAME
    action: stop
  except:
    - master
  tags:
    - nginx
    - review-apps
    - deploy

deploy:
  stage: deploy
  tags:
    - office
    - linux
    - docker
  only:
    - master
  before_script:
    - apk add --no-cache knock
    - echo " -- AWS configure..."
    - pip install awscli
    - printf "%s\n%s\neu-central-1\njson" "$AWS_GR_KEY_ID" "$AWS_GR_SECRET_KEY" | aws configure
    - $(aws ecr get-login --no-include-email --region eu-central-1)
  script:
    - echo " -- Building image..."
    - docker build -t $REPOSITORY_URL:latest .
    - echo " -- Tagging image..."
    - IMAGE_TAG="$(echo $CI_COMMIT_SHA | head -c 8)"
    - docker tag $REPOSITORY_URL:latest $REPOSITORY_URL:$IMAGE_TAG
    - echo " -- Pushing image..."
    - docker push $REPOSITORY_URL:latest
    - docker push $REPOSITORY_URL:$IMAGE_TAG
    - echo " -- Restarting docker swarm..."
    - sleep 60
    - knock --udp --delay 1000 docker-master.legendcity.app 13031 13035 13047 13028
  after_script:
    - printf "y" | docker system prune
    - rm -rf node_modules/ build/

demo:
  stage: deploy
  tags:
    - office
    - linux
    - docker
  only:
    - develop
  before_script:
    - apk add --no-cache knock
    - echo " -- AWS configure..."
    - pip install awscli
    - printf "%s\n%s\neu-central-1\njson" "$AWS_GR_KEY_ID" "$AWS_GR_SECRET_KEY" | aws configure
    - $(aws ecr get-login --no-include-email --region eu-central-1)
  script:
    - echo " -- Building image..."
    - docker build -t $REPOSITORY_URL:develop .
    - echo " -- Tagging image..."
    - IMAGE_TAG="$(echo $CI_COMMIT_SHA | head -c 8)"
    - docker tag $REPOSITORY_URL:develop $REPOSITORY_URL:$IMAGE_TAG
    - echo " -- Pushing image..."
    - docker push $REPOSITORY_URL:develop
    - docker push $REPOSITORY_URL:$IMAGE_TAG
    - echo " -- Restarting docker swarm..."
    - sleep 60
    - knock --udp --delay 1000 10.0.0.109 13031 13035 13047 13028
  after_script:
    - printf "y" | docker system prune
    - rm -rf node_modules/ build/
